syntax logo_syntax (logo_lexique) {

rule <start_symbol> {
  #-- DÃ©finition des routines
  $PROGRAM$
  @routineMap tableRoutines = {}
  repeat
  while
    <routine_definition> !?tableRoutines
  end
  #--- Programme principal
  $BEGIN$
    <instruction_list> !?tableRoutines
  $END$
  $.$
}

rule <routine_definition> ?!@routineMap ioTableRoutines {
  $ROUTINE$
  $identifier$ ?let @lstring routineName
  [!?ioTableRoutines insertKey !routineName]
  $BEGIN$
    <instruction_list> !?ioTableRoutines
  $END$
}

rule <instruction_list> ?!@routineMap ioTableRoutines {
  @instructionList instructions = {}
  repeat
  while
    <instruction> !?ioTableRoutines !?instructions
    $;$
  end
}

rule <instruction> ?!@routineMap ioTableRoutines ?!@instructionList instructions{
  select
    $CALL$ $identifier$ ?let @lstring routineName
    [ioTableRoutines searchKey !routineName]
  or
    $FORWARD$ $integer$ ?let @luint distance
    @instruction instruction = @forward.new {!distance}
    instructions += !instruction
  or
    $ROTATE$ $integer$ ?let @luint angle
    @instruction instruction = @rotate.new {!angle}
    instructions += !instruction
  or
    <pen_instruction> !?instructions
  end
}

rule <pen_instruction> ?!@instructionList instructions{
  @instruction instruction
  $PEN$
  select
    $UP$
    instruction = @penDown.new
  or
    $DOWN$
    instruction = @penUp.new
  end
  instructions += !instruction
}

}
